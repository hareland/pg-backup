name: ghcr-publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  IMAGE: ghcr.io/${{ github.repository }}
  DOCKER_CONTEXT: ./backup-runner
  DOCKERFILE_PATH: ./backup-runner/Dockerfile
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Keep the repo tag as-is (e.g. v1.2.3)
            type=ref,event=tag

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (PR â€” no push)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: ${{ env.PLATFORMS }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
