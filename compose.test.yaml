services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set local http://minio:9000 minio minio123) do sleep 2; done &&
      /usr/bin/mc mb -p local/testbucket || true &&
      /usr/bin/mc mb -p local/secondtestbucket || true &&
      tail -f /dev/null
      "

  pg-backup:
    build:
      context: ./backup-runner
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      create-bucket:
        condition: service_started
    environment:
      CONFIG_FILE: /config.yaml
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_DEFAULT_REGION: us-east-1
#      BACKUP_DESTINATION: second
      TZ: Europe/Copenhagen
    volumes:
      - ./example.yaml:/config.yaml:ro
      - ./backups:/backups
    restart: unless-stopped

volumes:
  pgdata: {}
  minio-data: {}
